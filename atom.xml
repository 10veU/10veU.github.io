<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Wang-Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://10veU.github.io/"/>
  <updated>2020-09-11T16:21:19.080Z</updated>
  <id>https://10veU.github.io/</id>
  
  <author>
    <name>XiaoJie Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://10veU.github.io/2020/09/11/hello-world/"/>
    <id>https://10veU.github.io/2020/09/11/hello-world/</id>
    <published>2020-09-11T16:21:19.080Z</published>
    <updated>2020-09-11T16:21:19.080Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一切始于<code>Hello World</code>!<br><img src="hello-world/10veU.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="其他" scheme="https://10veU.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="HelloWorld" scheme="https://10veU.github.io/tags/HelloWorld/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建免费个人博客</title>
    <link href="https://10veU.github.io/2019/10/09/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://10veU.github.io/2019/10/09/Hexo-GitHub搭建免费个人博客/</id>
    <published>2019-10-09T16:42:07.000Z</published>
    <updated>2020-09-11T16:21:19.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><head><meta name="generator" content="Hexo 3.9.0">     <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/all.js"></script>     <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js"></script> </head> <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css">  <h1 id="Hexo-GitHub免费搭建个人博客"><a href="#Hexo-GitHub免费搭建个人博客" class="headerlink" title="Hexo+GitHub免费搭建个人博客"></a>Hexo+GitHub免费搭建个人博客</h1><blockquote><p>作者：大大蜡笔小小新    </p></blockquote><h2 id="1-Hexo框架的介绍"><a href="#1-Hexo框架的介绍" class="headerlink" title="1.  Hexo框架的介绍"></a>1. <i class="fas fa-blog"></i> Hexo框架的介绍</h2><p><code>Hexo</code>的官方介绍：<code>A fast,simple&amp;powerful blog framework</code>。  </p><p><code>Hexo</code>框架具有以下特点：  </p><ul><li>快速搭建</li><li>支持<code>Markdown</code>语法  </li><li>支持一键部署  </li><li>丰富的主题和插件  </li></ul><h2 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2.  环境准备"></a>2. <i class="fas fa-home"></i> 环境准备</h2><h3 id="2-1申请一个GitHub账户"><a href="#2-1申请一个GitHub账户" class="headerlink" title="2.1申请一个GitHub账户"></a>2.1申请一个<code>GitHub</code>账户</h3><p>  <a href="https://github.com/" target="_blank" rel="noopener"><code>GitHub</code>账户申请</a></p><p>  <a href="https://help.github.com/cn" target="_blank" rel="noopener"><code>GitHub</code>疑问解答</a></p><h3 id="2-2搭建Hexo需要的环境"><a href="#2-2搭建Hexo需要的环境" class="headerlink" title="2.2搭建Hexo需要的环境"></a>2.2搭建<code>Hexo</code>需要的环境</h3><p>  如何安装<code>Hexo</code>及安装<code>Hexo</code>需要的环境，可以参考<code>Hexo</code>官方文档  </p><p>  <a href="https://hexo.io/docs/index.html" target="_blank" rel="noopener">Hexo官方文档</a>  </p><h3 id="2-3环境验证"><a href="#2-3环境验证" class="headerlink" title="2.3环境验证"></a>2.3环境验证</h3><p><code>Node.js</code>和<code>Git</code>安装是否成功?  </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 <span class="number">10</span>.<span class="number">0</span>.<span class="number">17134</span>.<span class="number">590</span>]  </span><br><span class="line">(c) <span class="number">2018</span> Microsoft Corporation。保留所有权利。    </span><br><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">lenovopc</span>&gt;<span class="title">node</span> -<span class="title">v</span>  </span></span><br><span class="line"><span class="function"><span class="title">v8</span>.11.2    </span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">lenovopc</span>&gt;<span class="title">npm</span> -<span class="title">v</span>  </span></span><br><span class="line"><span class="function">5.6.0</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Git</span>&gt;<span class="title">git</span> --<span class="title">version</span>  </span></span><br><span class="line"><span class="function"><span class="title">git</span> <span class="title">version</span> 2.16.2.<span class="title">windows</span>.1  </span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Git</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Node.js</code>和<code>npm</code>的关系  </p><blockquote><p><i class="fas fa-quote-left fa-3x fa-pull-left"></i><code>Node.js</code>是<code>javascript</code>的一种运行环境，是对<code>Google V8</code>引擎进行的封装。是一个服务器端的<code>javascript</code>的解释器。<br> 包含关系:<code>Node.js</code>中含有<code>npm</code>，比如说你安装好<code>Node.js</code>，你打开<code>cmd</code>输入<code>npm -v</code>会发现npm的版本号，说明<code>npm</code>已经安装好。<br>引用大神的总结:<br>其实<code>npm</code>是<code>Node.js</code>的包管理器（<code>package manager</code>）。我们在<code>Node.js</code>上开发时，会用到很多别人已经写好的<code>javascript</code>代码，<br>如果每当我们需要别人的代码时，都根据名字搜索一下，下载源码，解压，再使用，会非常麻烦。于是就出现了包管理器<code>npm</code>。<br>大家把自己写好的源码上传到<code>npm</code>官网上，如果要用某个或某些个，直接通过<code>npm</code>安装就可以了，不用管那个源码在哪里。<br>并且如果我们要使用模块<code>A</code>，而模块<code>A</code>又依赖模块<code>B</code>，模块<code>B</code>又依赖模块<code>C</code>和<code>D</code>，此时<code>npm</code>会根据依赖关系， 把所有依赖的包都下载下来并且管理起来。试想如果这些工作全靠我们自己去完成会多么麻烦！其实就是类似于<code>Java</code>中的<code>Maven</code>。  </p></blockquote><h2 id="3-下载及安装Hexo"><a href="#3-下载及安装Hexo" class="headerlink" title="3.  下载及安装Hexo"></a>3. <i class="fas fa-cloud-download-alt"></i> 下载及安装Hexo</h2><h3 id="3-1下载及安装Hexo"><a href="#3-1下载及安装Hexo" class="headerlink" title="3.1下载及安装Hexo"></a>3.1下载及安装<code>Hexo</code></h3><p>  在<code>cmd</code>终端窗口执行下载安装命令  </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>  安装完成如下图：  </p><p>  <img src="%E5%AE%89%E8%A3%85Hexo.png" alt="安装Hexo"></p><p>  执行命令判断<code>Hexo</code>安装是否成功</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>  安装成功如下：  </p><p>  <img src="%E5%AE%89%E8%A3%85Hexo%E6%88%90%E5%8A%9F.png" alt="安装Hexo成功"></p><h3 id="3-2初始化博客"><a href="#3-2初始化博客" class="headerlink" title="3.2初始化博客"></a>3.2初始化博客</h3><blockquote><p>以下操作尽可能都在<code>Git</code>终端操作</p></blockquote><p>  首先在自己本地磁盘创建一个安装目录，这里以<code>Hexo</code>为例；</p><p>  <img src="Hexo%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95.png" alt="Hexo安装目录"></p><p>  切换到此文件夹目录下执行初始化命令  </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>  <img src="Hexo%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%AD.png" alt="Hexo初始化中"></p><p>  如果你未自己手动创建文件夹，也可通过以下的命令去初始化<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字</span></span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="comment">// 进入博客文件夹，&lt;folder&gt;为文件夹的名称</span></span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line"><span class="comment">// node.js的命令，根据博客既定的dependencies配置安装所有的依赖包</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>  初始化完成  </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment">// 生成网页。</span></span><br><span class="line">hexo s <span class="comment">// 将生成的网页放在了本地服务器。</span></span><br></pre></td></tr></table></figure><p>  <img src="%E5%88%9D%E5%A7%8B%E5%8C%96%E5%AE%8C%E6%88%90.png" alt="初始化完成"></p><p>  通过提示的信息，访问本地服务器  </p><p>  <img src="%E5%8D%9A%E5%AE%A2.png" alt="博客"></p><h2 id="4-配置博客"><a href="#4-配置博客" class="headerlink" title="4.  配置博客"></a>4. <i class="fas fa-cog fa-spin"></i> 配置博客</h2><p>当然，目前的博客界面不是很美观，如果想做的比较有点逼格，当然还是得个性化定制下，我们可以去<code>Hexo</code>官网下载自己喜欢的主题。  </p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官方主题</a></p><p>选择你喜欢的主题，复制它的链接，<code>clone</code>到本地博客的<code>themes</code>目录下  </p><p><img src="%E5%85%8B%E9%9A%86%E4%B8%BB%E9%A2%98%E4%B8%AD.png" alt="克隆主题中"></p><p><img src="%E4%B8%BB%E9%A2%98%E5%85%8B%E9%9A%86%E5%AE%8C%E6%88%90.png" alt="主题克隆完成"></p><p><img src="%E5%85%8B%E9%9A%86%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9A%84%E4%B8%BB%E9%A2%98.png" alt="克隆到本地的主题"></p><p>配置博客我们首先就得了解博客文件结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">|node_modules:node.js的相关组件</span><br><span class="line">|scaddolds: 定义的一些东西，固定的</span><br><span class="line">|soorce: Markdown博客文档</span><br><span class="line">|themes: 一些主题</span><br><span class="line">|主题名-|</span><br><span class="line">       |主题内容（包含README.md,config.yml）</span><br><span class="line">|config: 配置文件（博客全局配置）</span><br><span class="line">|db.json: 生成的一些东西</span><br><span class="line">|package.json:  当前npm的相关的包</span><br><span class="line">|package-lock.json: npm管理的一些东西</span><br></pre></td></tr></table></figure><p>按照主题的<code>README.md</code>文档进行配置。<br>例如我使用的博客主题是<a href="https://github.com/Sariay/hexo-theme-Annie" target="_blank" rel="noopener">Annie</a>  </p><h2 id="5-博客个性化设置"><a href="#5-博客个性化设置" class="headerlink" title="5.  博客个性化设置"></a>5. <i class="fas fa-user-cog"></i> 博客个性化设置</h2><p>我们按照自己选择的<code>Hexo</code>主题进行配置后，如果想根据自己的喜好做相应的修改当然也是可以的。比如可以给博客添加图片、视频、音乐播放器等等。  </p><h3 id="5-1博客中添加图片1"><a href="#5-1博客中添加图片1" class="headerlink" title="5.1博客中添加图片1"></a>5.1博客中添加图片<a href="https://vwin.github.io/2018/08/07/Hexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">1</a></h3><p>博客中的图片添加有以下几种方式：</p><h4 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h4><ul><li>绝对路径<br>直接在主题下的<code>img</code>（存储图片文件夹，不同的主题存储图片的名称可能不同）文件夹下(themes/所选主题文件夹/source/img),<code>/img/图片名称.jpg</code>这张图片，就可以使用以下方式访问： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片说明](/img/图片名称.jpg)</span><br></pre></td></tr></table></figure></li></ul><p>eg:<br><img src="/img/wechat.jpg" alt="wechat">  </p><ul><li>相对路径<br>图片除了可以放在统一的<code>img</code>文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置博客根目录下的<code>_config.yml</code>来生成。  </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span> </span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">将_config.yml文件中的配置项`</span>post_asset_folder<span class="string">`设为`</span><span class="literal">true</span><span class="string">`后，执行命令`</span>$ hexo <span class="keyword">new</span> post_name<span class="string">`，在`</span>source/_posts<span class="string">`中会生成文章`</span>post_name.md<span class="string">`和同名文件夹`</span>post_name<span class="string">`。将图片资源放在`</span>post_name<span class="string">`文件夹中，文章就可以使用相对路径引用图片资源了。`</span>_posts/post_name/图片名称.jpg<span class="string">`这张图片可以用以下方式访问：  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>cmd</span><br><span class="line">![图片说明](图片名称.jpg) </span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">eg:  </span></span><br><span class="line"><span class="string">![微信公众号](微信公众号.jpg)  </span></span><br><span class="line"><span class="string">#### CDN引用</span></span><br><span class="line"><span class="string">除了在本地存储图片，还可以将图片上传到一些免费的 `</span>CDN<span class="string">`服务中。因国内访问`</span>GitHub<span class="string">`速度较慢，所以将突破放到国内图床上，然后引用外链接是常用的方法。  </span></span><br><span class="line"><span class="string">常用图床总结：https://sspai.com/post/40499  </span></span><br><span class="line"><span class="string">常用的图床有：七牛云、腾讯云、微博图床等。  </span></span><br><span class="line"><span class="string">#### GitHub  </span></span><br><span class="line"><span class="string">使用`</span>github<span class="string">`存储博客图片</span></span><br><span class="line"><span class="string"> 1. 创建一个空的仓库  </span></span><br><span class="line"><span class="string"> 2. 将图片`</span>push<span class="string">`到仓库中</span></span><br><span class="line"><span class="string"> 3. 点击图片进去，有个`</span>download<span class="string">`，右键复制链接</span></span><br><span class="line"><span class="string"> 4. 将链接插入文章  </span></span><br><span class="line"><span class="string">引用格式：  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>cmd</span><br><span class="line">![logo](https:<span class="comment">//github.com/xxxx/xx.jpg)</span></span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#### 使用插件  </span></span><br><span class="line"><span class="string"> 1. 首先把`</span>blog（hexo）<span class="string">`目录下的`</span>_config.yml<span class="string">`里的`</span>psot_asset_folder:<span class="string">`设置为`</span><span class="literal">true</span><span class="string">`</span></span><br><span class="line"><span class="string"> 2. 在`</span>blog（hexo）<span class="string">`目录下执行:  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>cmd  </span><br><span class="line">npm install hexo-asset-image --save</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 3. 在`</span>blog（hexo）<span class="string">`目录下`</span>Git Bash Here<span class="string">`，运行`</span>hexo n <span class="string">"博客文章名"</span><span class="string">`来生成`</span>md<span class="string">`博客时，会在`</span>_post<span class="string">`目录下看到一个与博客同名的文件夹。  </span></span><br><span class="line"><span class="string"> 4. 将想要上传的图片先扔到文件夹下，然后在博客中使用`</span>markdown<span class="string">`的格式引入图片：  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>cmd  </span><br><span class="line">![你想要输入的替代文字](xxxx/图片名.jpg) </span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。</span></span><br><span class="line"><span class="string">### 5.2博客中添加视频[2] </span></span><br><span class="line"><span class="string">&gt; 以`</span>bilibili<span class="string">`为例，B站无广告   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- 去B站获取视频外链  </span></span><br><span class="line"><span class="string">![获取视频外链](获取视频外链.png)  </span></span><br><span class="line"><span class="string">- 在文章中插入视频外链   </span></span><br><span class="line"><span class="string">我们知道在`</span>md<span class="string">`中可以直接插入`</span>html`代码。这里我们就插入视频外链。代码如下：  </span><br><span class="line"></span><br><span class="line">`<span class="string">``</span>html</span><br><span class="line">&lt;iframe src=<span class="string">"//player.bilibili.com/player.html?aid=68662896&amp;cid=118997493&amp;page=1"</span> scrolling=<span class="string">"no"</span> border=<span class="string">"0"</span> frameborder=<span class="string">"no"</span> framespacing=<span class="string">"0"</span> allowfullscreen=<span class="string">"true"</span>&gt; &lt;/iframe&gt;</span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">我们可以看到效果令人很不满意。  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- 修改代码，美化播放器样式。  </span></span><br><span class="line"><span class="string">代码如下：  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>html </span><br><span class="line">&lt;div style=<span class="string">"position: relative; width: 100%; height: 0;padding-bottom: 75%;"</span> &gt;</span><br><span class="line">&lt;iframe src=<span class="string">"//player.bilibili.com/player.html?aid=68662896&amp;cid=118997493&amp;page=1"</span> scrolling=<span class="string">"no"</span> border=<span class="string">"0"</span> frameborder=<span class="string">"no"</span> framespacing=<span class="string">"0"</span> allowfullscreen=<span class="string">"true"</span> style=<span class="string">"position: absolute; width: 100%; height: 100%; left: 0; top: 0;"</span>&gt; &lt;/iframe&gt;&lt;/div&gt;</span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 5.3博客中添加网易云音乐歌单    </span></span><br><span class="line"><span class="string">- （以 Chrome 为例，其他浏览器类似）打开歌单页面，在“生成外链播放器”上右击，点击检查（审查元素 `</span>ctrl+shift+i<span class="string">`）；  </span></span><br><span class="line"><span class="string">![网易云音乐外链](网易云音乐外链.png)</span></span><br><span class="line"><span class="string">- 接着找到生成外链播放器这段文字直接双击复制前面的`</span>/outchain/<span class="number">0</span>/<span class="number">170792779</span>/<span class="string">`  </span></span><br><span class="line"><span class="string">![外链id](外链id.png)  </span></span><br><span class="line"><span class="string">- 然后修改歌单链接示例：http://music.163.com/#/outchain/0/170792779/（可以修改自己喜欢的播放器尺寸，播放模式后再复制代码） </span></span><br><span class="line"><span class="string">![网易云音乐歌单](网易云音乐歌单.png)    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;由于版权限制，好多歌曲可能在播放器中无法播放，毕竟没有收费，将就用吧！😂</span></span><br><span class="line"><span class="string">### 5.4博客中实现在线联系功能  </span></span><br><span class="line"><span class="string">在线联系功能可以使访客及时，快捷的与博主交流，也能帮助博主及时的解决访客提出的博文中的问题。`</span>Hexo<span class="string">`实现在线联系功能主要有以下两种方式:  </span></span><br><span class="line"><span class="string">#### DaoVoice实现在线联系  </span></span><br><span class="line"><span class="string">- 注册登录`</span>DaoVoice<span class="string">`  </span></span><br><span class="line"><span class="string">[注册登录DaoVoice](http://dashboard.daovoice.io/get-started?invite_code=75159429)  </span></span><br><span class="line"><span class="string">- `</span>DaoVoice<span class="string">`接入  </span></span><br><span class="line"><span class="string">[`</span>DaoVoice<span class="string">`接入](http://guide.daocloud.io/daovoice/daovoice-9151028.html)  </span></span><br><span class="line"><span class="string">- `</span>Daovoice<span class="string">`绑定微信（可选）  </span></span><br><span class="line"><span class="string">`</span>DaoVoice<span class="string">`虽然可以很好的与访客交流，但是还是不能像微信聊天一样方便，所以我们绑定微信，瞬间秒回访客消息，不再等待！  </span></span><br><span class="line"><span class="string">![DaoVoice绑定微信](DaoVoice绑定微信.png)</span></span><br><span class="line"><span class="string">#### HEXO的博客添加gitter在线交流  </span></span><br><span class="line"><span class="string">[给基于HEXO的博客添加gitter在线交流](https://blog.csdn.net/u011606307/article/details/89504541)</span></span><br><span class="line"><span class="string">## 6. &lt;i class="fab fa-dev"&gt;&lt;/i&gt; 持续集成Hexo博客  </span></span><br><span class="line"><span class="string">#### 6.1使用Jenkins持续集成Hexo博客[3]    </span></span><br><span class="line"><span class="string">[使用Jenkins持续集成Hexo博客](http://www.sevenyuan.cn/2019/03/18/%E4%BD%BF%E7%94%A8Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90Hexo%E5%8D%9A%E5%AE%A2/)  </span></span><br><span class="line"><span class="string">#### 6.2用TravisCI持续集成Hexo博客    </span></span><br><span class="line"><span class="string">[Travis CI个人免费站点](https://travis-ci.org/)  </span></span><br><span class="line"><span class="string">[Travis CI企业收费站点](https://travis-ci.com/)  </span></span><br><span class="line"><span class="string">##### 6.2.1核心概念 </span></span><br><span class="line"><span class="string">- 什么是持续集成（CI）？[4]    </span></span><br><span class="line"><span class="string">CI(`</span>Continuous Integration<span class="string">`)翻译为持续集成。  </span></span><br><span class="line"><span class="string">持续集成是经常合并小的代码更改的实践，而不是在开发周期结束时合并大的更改。目的是通过以较小的增量开发和测试来构建更健康的软件。这就是`</span>Travis CI<span class="string">`出现的地方。  </span></span><br><span class="line"><span class="string">作为一个持续集成平台，`</span>Travis CI<span class="string">`通过自动构建和测试代码更改来支持您的开发过程，并提供有关更改成功的即时反馈。`</span>Travis CI<span class="string">`还可以通过管理部署和通知来自动化开发过程的其他部分。  </span></span><br><span class="line"><span class="string">##### 6.2.2准备条件  </span></span><br><span class="line"><span class="string">要开始使用Travis CI，请确保您具有：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- 一个[GitHub](https://github.com/)的帐户。  </span></span><br><span class="line"><span class="string">- [托管在GitHub上的项目](https://help.github.com/en/github/importing-your-projects-to-github)的所有者权限。  </span></span><br><span class="line"><span class="string">  - 博客源码仓库  </span></span><br><span class="line"><span class="string">  - 博客部署仓库  </span></span><br><span class="line"><span class="string">##### 6.2.3 关联仓库</span></span><br><span class="line"><span class="string">使用GitHub登录到[Travis CI个人免费站点](https://travis-ci.org/)  </span></span><br><span class="line"><span class="string">![travis login](travis_login.png)  </span></span><br><span class="line"><span class="string">关联到持续集成的仓库  </span></span><br><span class="line"><span class="string">![持续集成的仓库](repo.png)  </span></span><br><span class="line"><span class="string">**配置 Access Token**  </span></span><br><span class="line"><span class="string">如下图，Environment Variables 区域就是用来添加权限信息的。我们需要填写一个Token的名称和值，该名称可以在配置文件中以 <span class="subst">$&#123;变量名&#125;</span> 来引用，该Token我们需要从Github中获取。  </span></span><br><span class="line"><span class="string">![](travis_setting.png)  </span></span><br><span class="line"><span class="string">**从Github获取Access Token**  </span></span><br><span class="line"><span class="string">在Github的setting页面，左侧面板选择Developer settings然后Personal access tokens, 右上角点击Generate new token。生成token时候需要确定访问scope，这里我们选择我们的repo即可。 </span></span><br><span class="line"><span class="string">![](travis_token.png) </span></span><br><span class="line"><span class="string">重要：生成的token只有第一次可见，一定要保存下来备用。  </span></span><br><span class="line"><span class="string">![token](token.png)  </span></span><br><span class="line"><span class="string">**在Travis CI中配置**</span></span><br><span class="line"><span class="string">将上面获取到的token添加到 Environment Variables 部分，值为该 token ,而名称即为上面设置的 Travis_Token (请更改为个人所设置名称)。不勾选后面的 Display value in build log . 否则会在日志文件中暴露你的 token 信息，而日志文件是公开可见的。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">至此我们已经配置好了要构建的仓库和访问的token，接下来就是如何构建的问题了。  </span></span><br><span class="line"><span class="string">**配置.travis.yml（如果没有，新建)**  </span></span><br><span class="line"><span class="string">我个人的.travis.yml 可供参考</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>yml</span><br><span class="line"># 指定构建环境是Node.js，当前版本是稳定版</span><br><span class="line">sudo: <span class="literal">false</span></span><br><span class="line">language: node_js</span><br><span class="line">node_js:</span><br><span class="line">  - <span class="number">10</span></span><br><span class="line"></span><br><span class="line">env:</span><br><span class="line"> global:</span><br><span class="line">   - URL_REPO: github.com/<span class="number">10</span>veU/<span class="number">10</span>veU.github.io.git</span><br><span class="line"></span><br><span class="line"># 设置钩子只检测blog-source分支的push变动</span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line"></span><br><span class="line"># 设置缓存文件</span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - node_modules</span><br><span class="line"></span><br><span class="line">#在构建之前安装hexo环境</span><br><span class="line">before_install:</span><br><span class="line">  - npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">#安装git插件和搜索功能插件</span><br><span class="line">install:</span><br><span class="line">  - npm install</span><br><span class="line"></span><br><span class="line"># 执行清缓存，生成网页操作</span><br><span class="line">script:</span><br><span class="line">  - hexo clean</span><br><span class="line">  - hexo generate</span><br><span class="line">deploy:</span><br><span class="line">  provider: pages</span><br><span class="line">  skip_cleanup: <span class="literal">true</span></span><br><span class="line">  github_token: $GH_TOKEN  # Set in the settings page of your repository, as a secure variable</span><br><span class="line">  keep_history: <span class="literal">true</span></span><br><span class="line">  on:</span><br><span class="line">    branch: master</span><br><span class="line">  local-dir: public</span><br><span class="line"># configure notifications (email, IRC, campfire etc)</span><br><span class="line"># please update this section to your needs!</span><br><span class="line"># https://docs.travis-ci.com/user/notifications/</span><br><span class="line">notifications:</span><br><span class="line">  email:</span><br><span class="line">    - <span class="number">514084647</span>@qq.com</span><br><span class="line">  on_success: change</span><br><span class="line">  on_failure: always</span><br></pre></td></tr></table></figure><p>注意：需要将配置文件中的 GH_TOKEN 换成我们自己设定的名称，这里我的配置应该是 Travis_token 即 - git push –force –quiet “https://${Travis_token}@${GH_REF}” master:master # GH_TOKEN是在Travis中配置token的名称。 还要更改 GH_REF 中我们的博客仓库的地址。<br><img src="travis_success.png" alt="travis_success"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo博客" scheme="https://10veU.github.io/categories/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="GitHub" scheme="https://10veU.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://10veU.github.io/tags/Hexo/"/>
    
      <category term="博客" scheme="https://10veU.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
